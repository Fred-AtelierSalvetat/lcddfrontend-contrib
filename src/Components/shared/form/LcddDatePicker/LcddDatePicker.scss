$timeDisplayBackgroundColor: var(--primary);
$timeDisplaySelected: var(--white);
$timeDisplayUnselected: adjust-color(#113f59, $lightness: +60%); //primary + 60%
$clockBackgroundColor: var(--white);
$panelBackgroundColor: hsl(0, 0%, 90%);
$bootstrapBlue: #80bdff;
$unselectedColor: hsl(0, 0%, 30%);
$outOfCurrentRangeColor: hsl(0, 0%, 60%);
$selectedColor: white;
$selectedBackgroundColor: blue;
$clockHandWidth: 2;
$borderRadius: 0.25rem;
$transitionDuration: 0.3s;

// Aspect ratio management for choices containers
// derivated from https://css-tricks.com/aspect-ratio-boxes/

[style*='--aspect-ratio'] > :first-child {
    width: 100%;
}
[style*='--aspect-ratio'] > div {
    height: auto;
}
@supports (--custom: property) {
    [style*='--aspect-ratio'] {
        position: relative;
    }
    [style*='--aspect-ratio']::before {
        content: '';
        display: block;
        padding-bottom: calc(100% / (var(--aspect-ratio)));
    }
}

.lcdd-datepicker.form-control {
    &.is-invalid,
    &.is-valid {
        background-image: none;
    }
    display: flex;
    align-items: center;
    padding: 0 !important;
    max-width: unset;
    min-width: unset;

    .lcdd-datepicker-input.form-control {
        padding: 0 2.25rem 0 0.75rem;
        height: fit-content;
        width: 100%;
        &:hover,
        &:focus {
            box-shadow: none !important;
        }
        flex-shrink: 1;
        border-radius: 0;
        border: unset;
        border-right: 1px solid hsl(0, 0%, 80%) !important;
    }
    svg {
        flex-shrink: 0;
        margin: 0.375rem 0.5rem;
        fill: hsl(0, 0%, 80%);
        &:hover {
            fill: hsl(0, 0%, 60%);
        }
    }
}

.datePickerModal {
    .modal-content {
        width: fit-content;
        border: none;
        .modal-body {
            padding: 0;
        }
    }
}

.lcddTimestampPicker {
    width: fit-content;
    max-width: fit-content;
    min-width: fit-content;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    .timestampDisplay {
        display: flex;
        flex-direction: row;
        justify-content: center;
        background-color: $timeDisplayBackgroundColor;
        &.dateDisplay {
            border-radius: $borderRadius $borderRadius 0 0;
            span {
                font-size: 2rem;
            }
        }
        &.timeDisplay {
            span {
                font-size: 4rem;
            }
        }
        span {
            color: $timeDisplayUnselected;
            line-height: normal;
            user-select: none;
            &.digitDisplay {
                &:hover:not(.currentSelection):not(.preventMouseEvent) {
                    cursor: pointer;
                    transition: all 0.2s ease-in-out;
                    transform: scale(1.1);
                }
                &.currentSelection {
                    color: $timeDisplaySelected;
                }
            }
        }
    }

    .ctrlSelectionPanel {
        padding: 1rem;
        background-color: $panelBackgroundColor;
        border-radius: 0 0 $borderRadius $borderRadius;
        overflow: hidden;
    }
    .navArrow {
        cursor: pointer;
        flex-shrink: 0;
        flex-grow: 0;
        &.left {
            margin-left: -0.5rem;
        }
        &.right {
            margin-right: -0.5rem;
        }
    }
    .selectionTabContainer {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .tabSelection {
        flex-grow: 1;
        flex-shrink: 1;
        align-self: stretch;
        justify-self: stretch;
        display: flex;
        flex-wrap: wrap;
        align-content: space-around;
        justify-content: space-around;
        &.daySelection {
            div:not(.header) {
                flex: 0 0 calc(100% / 7 - 0.5rem);
                margin: 0.25rem;
            }
            div.header {
                cursor: auto;
                flex: 0 0 calc(100% / 7);
                margin: 0;
                p {
                    font-weight: bold;
                }
            }
        }

        div {
            flex: 0 0 calc(100% / 4 - 1rem);
            margin: 0.5rem;
            border-radius: 50%;
            display: flex;
            align-items: center;
            border: unquote($clockHandWidth + 'px') solid transparent;

            p {
                text-align: center;
                margin: 0;
                pointer-events: none;
                user-select: none;
            }

            &.selected {
                background-color: $selectedBackgroundColor;
                cursor: none;
                pointer-events: none;
                p {
                    color: $selectedColor;
                }
            }
            &:not(.selected) {
                cursor: pointer;
                pointer-events: auto;
                &.notInCurrentRange {
                    p {
                        color: $outOfCurrentRangeColor;
                    }
                }
                &:not(.notInCurrentRange) {
                    p {
                        color: $unselectedColor;
                    }
                }
                &.hovered {
                    border-color: $selectedBackgroundColor;
                }
            }
        }
    }
    svg {
        .hoursClock {
            transition: visibility $transitionDuration ease-in-out, opacity $transitionDuration ease-in-out,
                transform $transitionDuration ease-in-out;
            transform-origin: center;
            &.hidden {
                transform: scale(2);
                position: absolute;
                visibility: hidden;
                opacity: 0;
                height: 0;
                .figureCircle {
                    cursor: none;
                    pointer-events: none;
                }
            }
            &:not(.hidden) {
                visibility: visible;
                opacity: 1;
            }
        }
        .minutesClock {
            transition: visibility $transitionDuration ease-in-out, opacity $transitionDuration ease-in-out,
                transform $transitionDuration ease-in-out;
            transform-origin: center;
            &.hidden {
                transform: scale(0.4);
                position: absolute;
                visibility: hidden;
                opacity: 0;
                height: 0;
                .figureCircle {
                    cursor: none;
                    pointer-events: none;
                }
            }
            &:not(.hidden) {
                visibility: visible;
                opacity: 1;
            }
            .untrackedMinuteSelected {
                fill: $bootstrapBlue;
                fill-opacity: 0.4;
                stroke: $bootstrapBlue;
                stroke-width: $clockHandWidth;
            }
        }

        .clock {
            fill: $clockBackgroundColor;
        }

        .clockHandBase {
            fill: $unselectedColor;
        }

        .clockHand {
            stroke: $bootstrapBlue;
            stroke-width: $clockHandWidth;
        }

        .figure {
            .figureText {
                fill: $unselectedColor;
                pointer-events: none;
                user-select: none;
                &.selected {
                    font-weight: bolder;
                    fill: $selectedColor;
                }
                &.hovered {
                }
            }

            .figureCircle {
                fill: transparent;
                &:not(.preventMouseEvent) {
                    cursor: pointer;
                    pointer-events: fill;
                }
                &.selected {
                    fill: $bootstrapBlue;
                    fill-opacity: 0.4;
                    stroke: $bootstrapBlue;
                    stroke-width: $clockHandWidth;
                }
                &.hovered:not(.selected):not(.preventMouseEvent) {
                    fill: $clockBackgroundColor;
                    stroke: $bootstrapBlue;
                    stroke-width: 1;
                    filter: drop-shadow(0 0 0.2rem $bootstrapBlue) drop-shadow(0 0 0.1rem $bootstrapBlue);
                }
            }
        }
    }
}
